#version: '3.5'

services:
  # ----------------------------------------------------------------------
  # SINGLE ENTRYPOINT
  # ----------------------------------------------------------------------
  # webserver to handle all traffic. This can use let's encrypt to generate a SSL cert.
  traefik:
    image: traefik:1.7
    command:
      - --loglevel=INFO
      - --api
      # Entrypoints
      - --defaultentrypoints=https,http
      - --entryPoints=Name:http Address::80 ${TRAEFIK_HTTP_REDIRECT:-""}
      - --entryPoints=Name:https Address::443 ${TRAEFIK_HTTPS_OPTIONS:-TLS}
      # Configuration for acme (https://letsencrypt.org/)
      - --acme=${TRAEFIK_ACME_ENABLE:-false}
      #- --acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --acme.email=${TRAEFIK_ACME_EMAIL:-""}
      - --acme.entrypoint=https
      - --acme.onhostrule=true
      - --acme.storage=/config/acme.json
      - --acme.httpchallenge.entrypoint=http
      - --acme.storage=/config/acme.json
      - --acme.acmelogging=true
      # DOCKER
      - --docker=true
      - --docker.endpoint=unix:///var/run/docker.sock
      - --docker.exposedbydefault=false
      - --docker.watch=true
    restart: unless-stopped
    networks:
      - clowder
    ports:
      - 8000:80
      - "${TRAEFIK_HTTPS_PORT-8443}:443"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.port=8080"
      - "traefik.frontend.rule=${TRAEFIK_HOST:-}PathPrefixStrip: /traefik"
      - "traefik.website.frontend.whiteList.sourceRange=${TRAEFIK_IPFILTER:-172.16.0.0/12}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik:/config

  # ----------------------------------------------------------------------
  # CLOWDER APPLICATION
  # ----------------------------------------------------------------------

  # main clowder application
  clowder:
    image: clowder/clowder:1.20.2 #${CLOWDER_VERSION:-latest}
    restart: unless-stopped
    networks:
      - clowder
    depends_on:
      - mongo
    environment:
      - CLOWDER_ADMINS=${CLOWDER_ADMINS:-admin@example.com}
      - CLOWDER_REGISTER=${CLOWDER_REGISTER:-false}
      - CLOWDER_CONTEXT=${CLOWDER_CONTEXT:-/}
      - CLOWDER_SSL=${CLOWDER_SSL:-false}
      - RABBITMQ_URI=${RABBITMQ_URI:-amqp://guest:guest@rabbitmq/%2F}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE:-clowder}
      - RABBITMQ_CLOWDERURL=${RABBITMQ_CLOWDERURL:-http://clowder:9000}
      - SMTP_MOCK=${SMTP_MOCK:-true}
      - SMTP_SERVER=${SMTP_SERVER:-smtp}
      - SMTP_FROM=${SMTP_FROM:-devnull@ncsa.illinois.edu}
      - CLOWDER_STORAGE=${CLOWDER_STORAGE:-services.filesystem.DiskByteStorageService}
      - CLOWDER_DISKPATH=${CLOWDER_DISKPATH:-/home/clowder/data}
      - S3_ENDPOINT=${S3_ENDPOINT:-http://minio:9000}
      - S3_BUCKET=${S3_BUCKET:-clowder}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:-clowder}
      - S3_SECRET_KEY=${S3_SECRET_KEY:-catsarecute}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=clowder"
      - "traefik.port=9000"
      - "traefik.frontend.rule=${TRAEFIK_HOST:-}PathPrefix: ${CLOWDER_CONTEXT:-/}"
    volumes:
      - clowder-custom:/home/clowder/custom
      - /Users/polyprintlab/clowder/volumns/data:/home/clowder/data:rw
    command:
          - /home/clowder/clowder.sh
          - -mem 4096

  # # extract preview image
  imagepreview:
    image: clowder/extractors-image-preview:latest
    restart: unless-stopped
    networks:
      - clowder
    depends_on:
      - rabbitmq
      - clowder
    environment:
      - RABBITMQ_URI=${RABBITMQ_URI:-amqp://guest:guest@rabbitmq/%2F}

  # # extract image metadata
  # imagemetadata:
  #   image: clowder/extractors-image-metadata:latest
  #   restart: unless-stopped
  #   networks:
  #     - clowder
  #   depends_on:
  #     - rabbitmq
  #     - clowder
  #   environment:
  #     - RABBITMQ_URI=${RABBITMQ_URI:-amqp://guest:guest@rabbitmq/%2F}

  # # extract preview image from audio spectrogram
  # audiopreview:
  #   image: clowder/extractors-audio-preview:${CLOWDER_VERSION:-latest}
  #   restart: unless-stopped
  #   networks:
  #     - clowder
  #   depends_on:
  #     - rabbitmq
  #     - clowder
  #   environment:
  #     - RABBITMQ_URI=${RABBITMQ_URI:-amqp://guest:guest@rabbitmq/%2F}

  # # extract pdf preview image
  pdfpreview:
    platform: linux/x86_64
    image: clowder/extractors-pdf-preview:${CLOWDER_VERSION:-latest}
    restart: unless-stopped
    networks:
      - clowder
    depends_on:
      - rabbitmq
      - clowder
    environment:
      - RABBITMQ_URI=${RABBITMQ_URI:-amqp://guest:guest@rabbitmq/%2F}

#deletion
#  deletion:
#    image: deletion:latest
#    restart: unless-stopped
#    networks:
#      - clowder
#    depends_on:
#      - rabbitmq
#      - clowder
#    environment:
#      - RABBITMQ_URI=${RABBITMQ_URI:-amqp://guest:guest@rabbitmq/%2F}
#    volumes:
#      - /etc/localtime:/etc/localtime
#      - ./config.yml:/config.yml

  # archiver
  # archiver:
  #   image: oscm_4ceed_archive:0.10
  #   restart: unless-stopped
  #   networks:
  #     - clowder
  #   depends_on:
  #     - clowder
  #   environment:
  #     - API_KEY=12256c61-d1f5-4775-93ca-5a7de83de449
  #     - CLOWDER_URL=http://clowder:9000
  #     - SPACE_ID=647fafa1e4b0d67bbe01fe70
  #     - MONGO_URL=mongodb://mechse-pf-02.mechse.illinois.edu:27017
  #   volumes:
  #     - ./archive_checkpoints.csv:/home/archive_checkpoints.csv:rw
  #     - /etc/localtime:/etc/localtime
  # # warpage
  # warpage:
  #   image: warpage
  #   restart: unless-stopped
  #   networks:
  #     - clowder
  #   depends_on:
  #     - rabbitmq
  #     - clowder
  #   environment:
  #     - RABBITMQ_URI=${RABBITMQ_URI:-amqp://guest:guest@rabbitmq/%2F}
  #   volumes:
  #     - /home/clowder/data:/home/clowder/data:ro

  # # warpage
  # warpage2.dummy:
  #   image: warpage2.dummy
  #   restart: unless-stopped
  #   networks:
  #     - clowder
  #   depends_on:
  #     - rabbitmq
  #     - clowder
  #   environment:
  #     - RABBITMQ_URI=${RABBITMQ_URI:-amqp://guest:guest@rabbitmq/%2F}
  #   volumes:
  #     - /home/clowder/data:/home/clowder/data:ro


  # image analysis extractor
  image_analysis:
    image: image_analysis
    restart: unless-stopped
    networks:
      - clowder
    depends_on:
      - rabbitmq
      - clowder
    environment:
      - RABBITMQ_URI=${RABBITMQ_URI:-amqp://guest:guest@rabbitmq/%2F}
    volumes:
      - /Users/polyprintlab/clowder/data:/home/clowder/data:ro
    # ports:
    #   - 5000:5000
  # ----------------------------------------------------------------------
  # CLOWDER DEPENDENCIES
  # ----------------------------------------------------------------------

  # database to hold metadata (required)
  mongo:
    image: mongo:4.0 #3.6
    restart: unless-stopped
    networks:
      - clowder
    volumes:
      - mongo:/data/db
    ports:
      - "27017:27017"
    expose:
      - "27017"

  # message broker (optional but needed for extractors)
  rabbitmq:
    image: rabbitmq:management-alpine
    restart: unless-stopped
    networks:
      - clowder
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbitmq_management path_prefix "/rabbitmq"
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS:-guest}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=rabbitmq"
      - "traefik.port=15672"
      - "traefik.frontend.rule=${TRAEFIK_HOST:-}PathPrefix: /rabbitmq"
      - "traefik.website.frontend.whiteList.sourceRange=${TRAEFIK_IPFILTER:-172.16.0.0/12}"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - "15672"
     

  # search index (optional, needed for search and sorting future) 
  elasticsearch:
    platform: linux/x86_64
    image: elasticsearch:2
    command: elasticsearch -Des.cluster.name="clowder"
    networks:
      - clowder
    restart: unless-stopped
    environment:
      - cluster.name=clowder
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data

  # monitor clowder extractors
  monitor:
    image: clowder/monitor:${CLOWDER_VERSION:-latest}
    restart: unless-stopped
    networks:
      - clowder
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_URI=${RABBITMQ_URI:-amqp://guest:guest@rabbitmq/%2F}
      - RABBITMQ_MGMT_PORT=15672
      - RABBITMQ_MGMT_PATH=/rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.backend=monitor"
      - "traefik.port=9999"
      - "traefik.frontend.rule=${TRAEFIK_FRONTEND_RULE:-}PathPrefixStrip:/monitor"

# ----------------------------------------------------------------------
# NETWORK FOR CONTAINER COMMUNICATION
# ----------------------------------------------------------------------
networks:
  clowder:

# ----------------------------------------------------------------------
# VOLUMES FOR PERSISTENT STORAGE
# ----------------------------------------------------------------------
volumes:
  traefik:
  clowder-data:
  clowder-custom:
  mongo:
  rabbitmq:
  elasticsearch:

